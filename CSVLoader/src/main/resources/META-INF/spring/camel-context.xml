<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:cxf="http://camel.apache.org/schema/cxf" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="        http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/cxf      http://camel.apache.org/schema/cxf/camel-cxf.xsd        http://cxf.apache.org/jaxrs      http://cxf.apache.org/schemas/jaxrs.xsd        http://camel.apache.org/schema/spring      http://camel.apache.org/schema/spring/camel-spring.xsd">
	<cxf:rsClient address="http://localhost:8181/rest/messages"
		id="SMSRestService" loggingFeatureEnabled="true"
		serviceClass="com.redhat.demo.api.MessagesApi" />
	<bean class="com.redhat.demo.exception.ProcessingException" id="processingException" />
	<bean class="com.redhat.demo.exception.SystemException" id="systemException" />
	<bean
		class="org.apache.camel.component.metrics.routepolicy.MetricsRoutePolicy"
		id="metricspolicy" />
	<bean
		class="org.apache.camel.component.metrics.routepolicy.MetricsRoutePolicyFactory"
		id="metricsRoutePolicyFactory" />
	<bean class="org.apache.activemq.ActiveMQConnectionFactory" id="jmsConnectionFactory">
		<property name="brokerURL" value="vm://localhost?broker.persistent=false" />
	</bean>
	<!-- <camelContext errorHandlerRef="defaultEH" id="CamelCSVContext" -->
	<camelContext id="CamelCSVContext" trace="true"
		xmlns="http://camel.apache.org/schema/spring">
		<!-- <errorHandler deadLetterUri="direct:errorRoute" id="defaultEH" type="DeadLetterChannel"> 
			<redeliveryPolicy maximumRedeliveries="3" redeliveryDelay="2000" retryAttemptedLogLevel="WARN" 
			/> </errorHandler> -->
		<endpoint id="trans2"
			uri="dozer:trans2?sourceModel=com.redhat.demo.csv.BulkEmailCSVRecord&amp;targetModel=sample.Sample&amp;marshalId=transform-json&amp;mappingFile=transformation2.xml" />
		<endpoint id="csvtojson"
			uri="dozer:csvtojson?sourceModel=com.redhat.demo.csv.BulkEmailCSVRecord&amp;targetModel=com.redhat.demo.model.MessagePayload&amp;mappingFile=transformation.xml" />
		<dataFormats>
			<bindy classType="com.redhat.demo.csv.BulkEmailCSVRecord" id="bindyDataformat"
				type="Csv" />
			<json id="transform-json" library="Jackson" />
		</dataFormats>

		<onException id="system_exception_handler">
			<exception>org.apache.camel.component.cxf.CxfOperationException</exception>
			<onWhen>
				<simple>${exception.statusCode} &gt;= 500</simple>
			</onWhen>
			<redeliveryPolicy logRetryAttempted="TRUE"
				maximumRedeliveries="2" redeliveryDelay="2000"
				retryAttemptedLogLevel="WARN" />
			<handled>
				<constant>true</constant>
			</handled>
			<setBody id="_setBody1">
				<simple>${exchangeProperty.orig_msg}</simple>
			</setBody>
			<to id="systemfailure_error_queue_producer"
				uri="activemq:queue:{{sys:localtestq:prodqueue}}FailSystem?transacted=true&amp;username=admin&amp;password=admin&amp;jmsMessageType=Object" />
		</onException>
		<onException id="processing_exception_handler">
			<exception>org.apache.camel.component.cxf.CxfOperationException</exception>
			<onWhen>
				<simple>${exception.statusCode} &gt;= 400</simple>
			</onWhen>
			<redeliveryPolicy disableRedelivery="true"
				logRetryAttempted="TRUE" retryAttemptedLogLevel="WARN" />
			<handled>
				<constant>true</constant>
			</handled>
			<setBody id="extract_orig_msg">
				<simple>${exchangeProperty.orig_msg}</simple>
			</setBody>
			<to id="processing_error_queue_producer"
				uri="activemq:queue:{{sys:localtestq:prodqueue}}FailProcessing?transacted=true&amp;username=admin&amp;password=admin&amp;jmsMessageType=Object" />
		</onException>

		<route id="fileconsumer" routePolicyRef="metricspolicy">
			<from id="csvconsumer"
				uri="file:{{sys:filelocn:/tmp/}}?noop=true&amp;antInclude=*.csv" />
			<split id="contentsplitter">
				<tokenize token="\n" />
				<unmarshal id="convert to csv" ref="bindyDataformat" />
				<to id="amq_producer"
					uri="activemq:queue:{{sys:localtestq:prodqueue}}?username=admin&amp;password=admin" />
			</split>
		</route>
		<route id="RESTWSProducerRoute" trace="false">
			<from id="directconsumer" uri="direct:RESTConsumer" />
			<to id="convert_to_json" uri="ref:csvtojson" />
			<setHeader headerName="operationName" id="add_operation_header">
				<simple>messagesPost</simple>
			</setHeader>
			<setHeader headerName="Content-Type" id="_setHeader1">
				<constant>application/json</constant>
			</setHeader>
			<to id="invoke_rest_ws" pattern="InOut"
				uri="cxfrs:bean:SMSRestService?throwExceptionOnFailure=true" />
		</route>
		<route id="Wiretap route">
			<from id="_from2" uri="direct:tap" />
			<to id="transform_to_json" uri="ref:trans2" />
			<log id="_log24" message="Wiretap JSON message ==> ${body}" />
		</route>
		<route id="amqconsumer_route">
			<from id="amq_consumer"
				uri="activemq:queue:{{sys:localtestq:prodqueue}}?transacted=false&amp;username=admin&amp;password=admin" />
			<setProperty id="preserve_orig_message" propertyName="orig_msg">
				<simple>${body}</simple>
			</setProperty>
			<log id="_log26" message="Wiretap JSON message ==> ${body}" />
			<wireTap id="example_wiretap" uri="direct:tap" />
			<to id="_to1" uri="direct:RESTConsumer" />
		</route>
		<route id="Error_route">
			<from id="error_consumer" uri="direct:errorRoute" />
			<setBody id="_setBody1">
				<simple>${exchangeProperty.orig_msg}</simple>
			</setBody>
			<log id="_log29" message="Error body ==> ${body}" />
			<to id="_to2"
				uri="activemq:queue:{{sys:localtestq:prodqueue}}FailProcessing?transacted=false&amp;username=admin&amp;password=admin&amp;jmsMessageType=Object" />
		</route>
	</camelContext>
</beans>
